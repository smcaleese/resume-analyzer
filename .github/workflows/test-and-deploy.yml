name: deploy-and-test
on:
  push:
    branches:
    - master
jobs:
  test-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: set up NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: '14.x'
    - name: install frontend dependencies
      working-directory: ./src/frontend
      run: npm install
    - name: run tests
      working-directory: ./src/frontend
      run: npm test
  test-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: install Python dependencies
      working-directory: ./src/backend
      run: pip install -r requirements.txt
    - name: run unit tests
      working-directory: ./src/backend/tests/unit-tests
      run: python -m unittest
  test-api:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: install Python dependencies
      working-directory: ./src/backend
      run: pip install -r requirements.txt
    - name: install newman
      run: npm install -g newman
    - name: run server
      working-directory: ./src/backend
      run: uvicorn server:app &
    - name: run newman tests 1
      working-directory: ./src/backend/tests/postman
      run: newman run fyp-status.postman_collection.json
    - name: run newman tests 2
      working-directory: ./src/backend/tests/postman
      run: newman run fyp.postman_collection.json
    - name: shut down server
      run: ps aux | grep -i "[u]vicorn" | awk {'print $2'} | xargs kill -9
  deploy-frontend:
    needs: [test-frontend, test-api]
    runs-on: ubuntu-latest
    steps:
    - name: deploy frontend
      run: |
          URL="${{ secrets.AMPLIFY_WEBHOOK_URL }}"
          curl -X POST -d {} "$URL" -H "Content-Type: application/json"
  deploy-backend:
    needs: [test-backend, test-api]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: create zip file
      run: zip -r deploy.zip ./src/backend -x '*.git*'
    - name: deploy backend to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: resume-analyzer-backend 
        environment_name: resume-analyzer-backend-env
        version_label: "${{ github.sha }}"
        region: eu-west-1
        deployment_package: deploy.zip
