{
	"info": {
		"_postman_id": "ce6f4906-a4a3-48c4-9b99-7bbb98717a6c",
		"name": "FYP",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Status_Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response Code', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test('Status Message', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.status).to.equal('ok')\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": []
				},
				"description": "Simple get request that checks server is running"
			},
			"response": []
		},
		{
			"name": "Resume_Upload_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status Code', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"var data = pm.response.json();\r",
							"pm.test('Skills', function() {\r",
							"    var skillsList = [data.skills[0].name, data.skills[1].name, data.skills[2].name, data.skills[3].name];\r",
							"    pm.expect(skillsList).to.contain('ReactJS')\r",
							"    pm.expect(skillsList).to.contain('Python')\r",
							"    pm.expect(skillsList).to.contain('Java')\r",
							"    pm.expect(skillsList).to.contain('JavaScript')\r",
							"})\r",
							"\r",
							"pm.test('Recommendations', function() {\r",
							"    pm.expect(data.recommendations.length).to.equal(10)\r",
							"})\r",
							"\r",
							"pm.test('Skill Count', function() {\r",
							"    pm.expect(data.skill_counts).to.exist\r",
							"})\r",
							"\r",
							"pm.test('Jobs', function() {\r",
							"    pm.expect(data.jobs).to.exist\r",
							"})\r",
							"\r",
							"pm.test('Resume_Score', function() {\r",
							"    pm.expect(data.resume_score.overall_scores.all).to.equal(44)\r",
							"    pm.expect(data.resume_score.skill_scores.all).to.equal(58)\r",
							"    pm.expect(data.resume_score.length_score).to.equal(16)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "../test-resume.pdf"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/resume-upload",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"resume-upload"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				},
				"description": "Post request with uploads file 'test-resume.pdf'"
			},
			"response": []
		},
		{
			"name": "Resume_Upload_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status Code', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"var data = pm.response.json();\r",
							"pm.test('Skills', function() {\r",
							"    var skillsList = [data.skills[0].name, data.skills[1].name, data.skills[2].name, data.skills[3].name, data.skills[4].name, data.skills[5].name, data.skills[6].name, data.skills[7].name,];\r",
							"    pm.expect(skillsList).to.contain('HTML')\r",
							"    pm.expect(skillsList).to.contain('CSS')\r",
							"    pm.expect(skillsList).to.contain('Java')\r",
							"    pm.expect(skillsList).to.contain('ReactJS')\r",
							"    pm.expect(skillsList).to.contain('JIRA')\r",
							"    pm.expect(skillsList).to.contain('JavaScript')\r",
							"    pm.expect(skillsList).to.contain('PostgreSQL')\r",
							"    pm.expect(skillsList).to.contain('Spring')\r",
							"\r",
							"    pm.expect(data.recommendations.length).to.gt(0)\r",
							"})\r",
							"\r",
							"pm.test('Recommendations', function() {\r",
							"    pm.expect(data.recommendations.length).to.equal(10)\r",
							"})\r",
							"\r",
							"pm.test('Skill Count', function() {\r",
							"    pm.expect(data.skill_counts).to.exist\r",
							"})\r",
							"\r",
							"pm.test('Jobs', function() {\r",
							"    pm.expect(data.jobs).to.exist\r",
							"})\r",
							"\r",
							"pm.test('Resume_Score', function() {\r",
							"    pm.expect(data.resume_score.overall_scores.all).to.equal(58)\r",
							"    pm.expect(data.resume_score.skill_scores.all).to.equal(66)\r",
							"    pm.expect(data.resume_score.length_score).to.equal(43)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "../test-resume2.pdf"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/resume-upload",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"resume-upload"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				},
				"description": "Post request with uploads file 'test-resume2.pdf'"
			},
			"response": []
		},
		{
			"name": "Path_Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response Code', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test('Response Body', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data['Junior Frontend Developer']).to.exist\r",
							"    pm.expect(data['Senior Frontend Developer']).to.exist\r",
							"    pm.expect(data['Junior Backend Developer']).to.exist\r",
							"    pm.expect(data['Senior Backend Developer']).to.exist\r",
							"    pm.expect(data['Junior Full Stack Developer']).to.exist\r",
							"    pm.expect(data['Full Stack Developer']).to.exist\r",
							"    pm.expect(data['Senior Full Stack Developer']).to.exist\r",
							"    pm.expect(data['QA Engineer']).to.exist\r",
							"    pm.expect(data['Senior QA Engineer']).to.exist\r",
							"    pm.expect(data['Business Analyst']).to.exist\r",
							"    pm.expect(data['Development Lead']).to.exist\r",
							"    pm.expect(data['Software Architect']).to.exist\r",
							"    pm.expect(data['Product Owner']).to.exist\r",
							"    pm.expect(data['Project Manager']).to.exist\r",
							"    pm.expect(data['Devops']).to.exist\r",
							"    pm.expect(data['Senior Devops']).to.exist\r",
							"    pm.expect(data['Automation Engineer']).to.exist\r",
							"    pm.expect(data['Cloud Engineer']).to.exist\r",
							"    pm.expect(data['Database Admin (DBA)']).to.exist\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/path-data",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"path-data"
					]
				},
				"description": "Get request to the '/path-data' endpoint"
			},
			"response": []
		},
		{
			"name": "Role_Data_Junior_FE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response Code', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test('Response Body', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.jobs).to.exist\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/job-data-by-role?role_type=Junior Frontend Developer",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"job-data-by-role"
					],
					"query": [
						{
							"key": "role_type",
							"value": "Junior Frontend Developer"
						}
					]
				},
				"description": "Get role data for a junior frontend Developer"
			},
			"response": []
		},
		{
			"name": "Role_Data_Devops",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response Code', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test('Response Body', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.jobs).to.exist\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/job-data-by-role?role_type=Devops",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"job-data-by-role"
					],
					"query": [
						{
							"key": "role_type",
							"value": "Devops"
						}
					]
				},
				"description": "Get role data for Devops"
			},
			"response": []
		},
		{
			"name": "Report_Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response Code', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"var data = pm.response.json();\r",
							"\r",
							"pm.test('Skill_Counts', function() {\r",
							"    pm.expect(data.skill_counts).to.exist\r",
							"})\r",
							"\r",
							"pm.test('Soft_Skill_Counts', function() {\r",
							"    pm.expect(data.soft_skill_counts).to.exist\r",
							"})\r",
							"\r",
							"pm.test('Years_Of_Experience', function() {\r",
							"    pm.expect(data.years_of_experience_counts).to.exist\r",
							"})\r",
							"\r",
							"pm.test('Locations', function() {\r",
							"    pm.expect(data.location_counts).to.exist\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/report-data",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"report-data"
					]
				},
				"description": "Get report data"
			},
			"response": []
		}
	]
}